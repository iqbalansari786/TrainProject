<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">


	<mvc:annotation-driven></mvc:annotation-driven>
	<context:component-scan
		base-package="com.Train.Controller,
   com.Train.Dao,com.Train.Services">
	</context:component-scan>
	<context:component-scan
		base-package="com.Train.globalExceptionhandler">
	</context:component-scan>
	<!-- <bean id="myBeansValidator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" /> -->
	<!-- Spring Email Sender Bean Configuration -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="ansaris500@gmail.com" />
		<property name="password" value="iloveuamina" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<!-- <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="host" value="smtp.mail.yahoo.com" /> <property name="port" 
		value="587" /> <property name="username" value="ansaris@gmail.com" /> <property 
		name="password" value="iloveuamina" /> <property name="javaMailProperties"> 
		<props> <prop key="mail.smtp.auth">true</prop> <prop key="mail.debug">true</prop> 
		<prop key="mail.transport.protocol">smtp</prop> <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> 
		<prop key="mail.smtp.socketFactory.port">465</prop> <prop key="mail.smtp.starttls.enable">true</prop> 
		</props> </property> </bean> -->

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- max upload size in bytes -->
		<property name="maxUploadSize" value="20971520" /> <!-- 20MB -->

		<!-- max size of file in memory (in bytes) -->
		<property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->

	</bean>

	<!-- Step1 :Define Database Datasuurse -->
	<bean id="myDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:3306/trainprojectversion2?useSSL=false" />
		<property name="user" value="hbstudent" />
		<property name="password" value="hbstudent" />


		<!-- these are connection pool properties for c3P0 -->
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="maxIdleTime" value="30000" />
	</bean>



	<!-- Step 2:Setup Hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />


		<property name="packagesToScan" value="com.Train.Entity" />

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- Step 3 : Setup Hibernate transaction manager -->
	<bean id="myTransactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<!-- Step 4:Enable configuration of transactional behavior based on annotations -->
	<tx:annotation-driven
		transaction-manager="myTransactionManager" />

	<!-- Add support for reading web resources: css,images,js etc.... -->

	<!-- Here location="resources" physical directory name -->
	<!-- Mapping="/resources/**" url mapping ** to recurse subdirectories -->



	<mvc:resources location="/resources/"
		mapping="/resources/**" />

	<!-- <mvc:resources location="/resources/css/" mapping="/resources/css/**" 
		/> <mvc:resources location="/resources/images/" mapping="/resources/images/**" 
		/> <mvc:resources location="/resources/data1/" mapping="/resources/data1/**" 
		/> <mvc:resources location="/resources/engine1/" mapping="/resources/engine1/**" 
		/> -->

	<!-- Load Custome Message for error -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames" value="resources/messages"></property>

	</bean>

</beans>